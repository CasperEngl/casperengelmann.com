---
import * as home from '~/home.md'
import { obfuscate } from '~/utils/obfuscate'

let { title } = Astro.props
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>{title || 'Casper Engelmann'}</title>
	</head>
	<body class="dark:bg-black dark:text-white m-8">
		<slot />

		<footer class="mt-6">
			<div class="relative inline-flex flex-wrap gap-2">
				<p
					class="js-email-select inline-block"
					tabindex={0}
					set:html={obfuscate(home.frontmatter.email)}
				>
				</p>

				<p
					class="js-email-select-helper hidden text-xs max-w-[9rem] absolute bottom-0 -right-2 translate-x-full text-gray-500"
				>
				</p>
			</div>

			<p
				class="js-sorry text-gray-500 text-xs mt-1 max-w-sm cursor-zoom-in select-none"
			>
				Sorry but you'll have to copy this yourself, to protect me from
				spammers. If you have JavaScript enabled, clicking the email will select
				it for you.
			</p>
		</footer>

		<script is:inline>
			function usesCommandKey() {
				return (
					navigator.platform.includes('Mac') ||
					navigator.platform.includes('iPhone') ||
					navigator.platform.includes('iPad') ||
					navigator.platform.includes('iPod')
				)
			}

			function usesControlKey() {
				return (
					navigator.platform.includes('Win') ||
					navigator.platform.includes('Linux')
				)
			}

			function getSuperKey() {
				if (usesCommandKey()) {
					return 'âŒ˜'
				} else if (usesControlKey()) {
					return 'ctrl'
				}

				return 'Super'
			}

			const email = document.querySelector('.js-email-select')
			const emailHelper = document.querySelector('.js-email-select-helper')

			function getEmailHelperText() {
				return `Email selected and ready to copy, just press ${getSuperKey()} + C`
			}

			// Show email helper message when email is selected

			let timeout = null
			let copyCount = 0

			function messageCopied() {
				let timeoutMs = 1500

				clearTimeout(timeout)

				copyCount++

				if (copyCount > 15) {
					emailHelper.textContent = 'ðŸ˜‰'

					timeoutMs = 3000
				} else if (copyCount > 10) {
					emailHelper.textContent = `You still haven't had enough?`

					timeoutMs = 4000
				} else if (copyCount > 7) {
					emailHelper.textContent = `That's gotta be enough copies...`

					timeoutMs = 4000
				} else if (emailHelper.textContent.includes('copied')) {
					emailHelper.textContent += 'ðŸŽ‰'

					timeoutMs = 1000
				} else {
					emailHelper.textContent = 'Email copied! ðŸŽ‰'
				}

				timeout = setTimeout(() => {
					emailHelper.textContent = getEmailHelperText()

					copyCount = 0
				}, timeoutMs)
			}

			email.addEventListener('focus', () => {
				window.getSelection().selectAllChildren(email)

				emailHelper.classList.remove('hidden')
				emailHelper.textContent = getEmailHelperText()

				email.addEventListener('copy', messageCopied)
			})

			email.addEventListener('blur', () => {
				window.getSelection().empty()

				emailHelper.classList.add('hidden')
				emailHelper.textContent = ''

				email.removeEventListener('copy', messageCopied)
			})

			// Allow user to make the sorry text larger.

			const sorry = document.querySelector('.js-sorry')

			sorry.addEventListener('click', () => {
				if (sorry.classList.contains('cursor-zoom-in')) {
					sorry.classList.remove('cursor-zoom-in')
					sorry.classList.add('cursor-zoom-out')

					sorry.classList.add('text-base')
					sorry.classList.remove('text-xs')
				} else if (sorry.classList.contains('cursor-zoom-out')) {
					sorry.classList.remove('cursor-zoom-out')
					sorry.classList.add('cursor-zoom-in')

					sorry.classList.remove('text-base')
					sorry.classList.add('text-xs')
				}
			})
		</script>
	</body>
</html>
